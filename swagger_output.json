{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Burger Hunger API",
    "description": "API desenvolvida para aplicação web da hamburgueria Burger Hunger. Para utilizar qualquer endpoint você percisará de um token, que pode ser gerado no endpoint /login com o e-mail l@l.com e a senha '123456",
    "contact": {
      "email": "anabeatrizcosta.o@gmail.com",
      "url": "https://github.com/biacostadev"
    }
  },
  "host": "https://testando-db.herokuapp.com/",
  "basePath": "/",
  "tags": [
    {
      "name": "auth",
      "description": "Gera um token"
    },
    {
      "name": "users",
      "description": "Operações com usuários"
    },
    {
      "name": "products",
      "description": "Operações com produtos"
    },
    {
      "name": "orders",
      "description": "Operações com pedidos"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "Endpoint para gerar o token de autenticação com um usário já logado.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "any"
                },
                "password": {
                  "type": "string",
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "Endpoint para obter todos os usuários cadastrados.",
        "parameters": [
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "description": "Endpoint para criar um novo usuário.",
        "parameters": [
          {
            "name": "novo usuário",
            "in": "body",
            "description": "Informações do usuário.",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "Endpoint para obter um usuário especídifo.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do usuário."
          },
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "description": "Endpoint para editar qualquer informação de um usuário especídifo.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do usuário."
          },
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userName": {
                  "type": "string",
                  "example": "any"
                },
                "email": {
                  "type": "string",
                  "example": "any"
                },
                "password": {
                  "type": "string",
                  "example": "any"
                },
                "role": {
                  "type": "string",
                  "example": "any"
                },
                "restaurant": {
                  "type": "string",
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "description": "Endpoint para excluir um usuário especídifo.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do usuário."
          },
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Endpoint para obter todos os produtos cadastrados.",
        "parameters": [
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "description": "Endpoint para criar um novo produto.",
        "parameters": [
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          },
          {
            "name": "novo produto",
            "in": "body",
            "description": "Informações do produto.",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/NewProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/products/{productid}": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Endpoint para obter um produto específico.",
        "parameters": [
          {
            "name": "productid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do produto."
          },
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "products"
        ],
        "description": "Endpoint para editar um produto específico.",
        "parameters": [
          {
            "name": "productid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do produto."
          },
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "any"
                },
                "price": {
                  "type": "string",
                  "example": "any"
                },
                "flavor": {
                  "type": "string",
                  "example": "any"
                },
                "complement": {
                  "type": "string",
                  "example": "any"
                },
                "type": {
                  "type": "string",
                  "example": "any"
                },
                "subType": {
                  "type": "string",
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "products"
        ],
        "description": "Endpoint para excluir um produto específico.",
        "parameters": [
          {
            "name": "productid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do produto."
          },
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/products/many": {
      "post": {
        "tags": [
          "products"
        ],
        "description": "Endpoint para criar vários produtos de uma vez.",
        "parameters": [
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          },
          {
            "name": "novos produtos",
            "in": "body",
            "description": "Informações dos produtos.",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/NewManyProducts"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "orders"
        ],
        "description": "Endpoint para obter todos os pedidos cadastrados.",
        "parameters": [
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "orders"
        ],
        "description": "Endpoint para criar um novo pedido.",
        "parameters": [
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          },
          {
            "name": "novo pedido",
            "in": "body",
            "description": "Informações do pedido.",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/orders/{orderid}": {
      "get": {
        "tags": [
          "orders"
        ],
        "description": "Endpoint para obter um pedido específico.",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do pedido."
          },
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "orders"
        ],
        "description": "Endpoint para editar um pedido específico.",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do pedido."
          },
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          },
          {
            "name": "editar um pedido",
            "in": "body",
            "description": "Informação para atualização do status de um pedido.",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/PatchOrder"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "description": "Endpoint para excluir um pedido específico.",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do pedido."
          },
          {
            "name": "token",
            "description": "Auth Token.",
            "type": "string",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number",
          "example": 1
        },
        "clientName": {
          "type": "string",
          "example": "Marie"
        },
        "table": {
          "type": "number",
          "example": 2
        },
        "status": {
          "type": "string",
          "example": "Pending"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 10
              },
              "qtd": {
                "type": "number",
                "example": 1
              }
            }
          }
        }
      }
    },
    "NewUser": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string",
          "example": "Joana"
        },
        "password": {
          "type": "number",
          "example": 123456
        },
        "email": {
          "type": "string",
          "example": "j@j.com"
        },
        "role": {
          "type": "string",
          "example": "Garçonete"
        },
        "restaurant": {
          "type": "string",
          "example": "Burger Hunger"
        }
      }
    },
    "NewProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Hambúrguer simples"
        },
        "price": {
          "type": "number",
          "example": 15
        },
        "flavor": {
          "type": "string",
          "example": "vegetariano"
        },
        "complement": {
          "type": "string",
          "example": "ovo"
        },
        "type": {
          "type": "string",
          "example": "all-day"
        },
        "subType": {
          "type": "string",
          "example": "hamburguer"
        }
      }
    },
    "NewManyProducts": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Hambúrguer duplo"
          },
          "price": {
            "type": "number",
            "example": 17
          },
          "flavor": {
            "type": "string",
            "example": "frango"
          },
          "complement": {
            "type": "string",
            "example": "queijo"
          },
          "type": {
            "type": "string",
            "example": "all-day"
          },
          "subType": {
            "type": "string",
            "example": "hamburguer"
          }
        }
      }
    },
    "PatchOrder": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "em preparo"
        }
      }
    }
  }
}